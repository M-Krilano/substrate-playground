apiVersion: v1
kind: ResourceQuota
metadata:
  name: pod-quota
spec:
  hard:
    pods: "15"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default-service-account
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: default-role
subjects:
- kind: ServiceAccount
  name: default-service-account
  namespace: ${K8S_NAMESPACE}
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: playground
spec:
  selector:
    matchLabels:
      app: playground
  replicas: 1
  template:
    metadata:
      labels:
        app: playground
    spec:
      serviceAccountName: default-service-account
      containers:
      - name: playground
        image: ${IMAGE}
        ports:
        - containerPort: ${PLAYGROUND_PORT}
---
apiVersion: v1
kind: Service
metadata:
  name: playground-http
  labels:
    app: playground
spec:
  type: NodePort
  ports:
  - port: ${PLAYGROUND_PORT}
    targetPort: ${PLAYGROUND_PORT}
  selector:
    app: playground
---
# Creates an ingress associating the certificate to the LoadBalancer
# See https://cloud.google.com/kubernetes-engine/docs/how-to/managed-certs
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: playground-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: ${GLOBAL_IP_NAME}
spec:
  backend:
    serviceName: playground-http
    servicePort: ${PLAYGROUND_PORT}
  rules:
    - host: 1234.${HOST}
      http:
        paths:
         - path: /
           backend:
             serviceName: theia-substrate-http-7qsld
             servicePort: 8080