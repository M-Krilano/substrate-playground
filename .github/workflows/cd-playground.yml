name: Continuous Deployment Playground

on:
  push:
    branches:
      - develop
      - master
    paths-ignore:
      - 'README.md'
      - '.github/workflows/book.yml'
      - '.github/workflows/ci-**'
      - '.github/workflows/cd-base-templates.yml'
      - '.github/workflows/cd-templates.yml'
      - 'docs/**'
      - 'conf/k8s/overlays/**/templates/**'
      - 'conf/k8s/overlays/production'
      - 'conf/k8s/overlays/dev'
      - 'templates/**'

env:
  GKE_ZONE: us-central1-a
  DOCKER_BUILDKIT: 1

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Set env to staging
        if: endsWith(github.ref, '/develop')
        run: |
          echo "::set-env name=ENVIRONMENT::staging"
          echo "::set-env name=NAMESPACE::playground-staging

      - name: Set env to production
        if: endsWith(github.ref, '/master')
        run: |
          echo "::set-env name=ENVIRONMENT::production"
          echo "::set-env name=NAMESPACE::playground

      - uses: actions/checkout@v2
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCLOUD_KEY }}
          export_default_credentials: true
          project_id: ${{ secrets.GKE_PROJECT }}
      - run: gcloud --quiet auth configure-docker
      - run: gcloud container clusters get-credentials "substrate-$NAMESPACE" --zone "$GKE_ZONE"
      - run: echo "::set-env name=ACCESS_TOKEN::$(gcloud auth print-access-token)"

      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: backend
          dockerfile: backend/Dockerfile
          repository: paritytech/substrate-playground-backend-api
          tags: latest
          add_git_labels: true
          tag_with_ref: true
          tag_with_sha: true

      - uses: docker/build-push-action@v1
        with:
          username: oauth2accesstoken
          password: ${{ env.ACCESS_TOKEN }}
          path: backend
          dockerfile: backend/Dockerfile
          repository: substrateplayground-252112/jeluard/substrate-playground-backend-api
          registry: gcr.io
          tags: latest
          add_git_labels: true
          tag_with_ref: true
          tag_with_sha: true

      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: frontend
          dockerfile: frontend/Dockerfile
          repository: paritytech/substrate-playground-backend-ui
          tags: latest
          add_git_labels: true
          tag_with_ref: true
          tag_with_sha: true
          
      - uses: docker/build-push-action@v1
        with:
          username: oauth2accesstoken
          password: ${{ env.ACCESS_TOKEN }}
          path: frontend
          dockerfile: frontend/Dockerfile
          repository: substrateplayground-252112/jeluard/substrate-playground-backend-ui
          registry: gcr.io
          tags: latest
          add_git_labels: true
          tag_with_ref: true
          tag_with_sha: true

      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv3.6.1/kustomize_v3.6.1_linux_amd64.tar.gz
          tar zxvf kustomize*
          chmod u+x ./kustomize  
        working-directory: conf/k8s/overlays/${{ env.ENVIRONMENT }}

      - run: echo ::set-output name=sha::sha-${GITHUB_SHA::7}
        id: env

      - name: Update version
        run: |-
          ./kustomize edit set image paritytech/substrate-playground-backend-api:${{ steps.env.outputs.sha }}
          ./kustomize edit set image paritytech/substrate-playground-backend-ui:${{ steps.env.outputs.sha }}
        working-directory: conf/k8s/overlays/${{ env.ENVIRONMENT }}

      - uses: EndBug/add-and-commit@v4
        with:
          message: ":bookmark: update backend images"
          add: "conf/k8s/overlays/${{ env.ENVIRONMENT }}/kustomization.yaml"
          tag: ${{ steps.env.outputs.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy on GKE
        run:  |-
          ./kustomize build . | kubectl apply --record -f -
          kubectl get services -o wide
        working-directory: conf/k8s/overlays/${{ env.ENVIRONMENT }}

      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v3
        with:
          urls: https://$NAMESPACE.substrate.dev/
          uploadArtifacts: true

      # TODO
      # run e2e tests
      # if ok, perform screenshots and attach
      # if not, fails and rollback
      # https://learnk8s.io/kubernetes-rollbacks
      # https://medium.com/@copyconstruct/testing-in-production-the-safe-way-18ca102d0ef1
      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.env.outputs.sha }}
          release_name: Release ${{ steps.env.outputs.sha }}
          body: |
            Backend release:
            - paritytech/substrate-playground-backend-api:${{ steps.env.outputs.sha }}
            - paritytech/substrate-playground-backend-ui:${{ steps.env.outputs.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}