# Build template images from an image and current base templates
# Then sets the new template image id in the right conf file.
# This is turns triggers playground ConfigMap update (see `cd-templates.yml`)
#
# Images are automatically updated on `staging` only.
#
# Must be called with the following payload: `{id: "TEMPLATE_ID", image: "IMAGE_ID"}`
name: Event template-updated

on:
  repository_dispatch:
    types: [template-updated]

env:
  DOCKER_BUILDKIT: 1
  TEMPLATE_ID: ${{ github.event.client_payload.id }}
  TEMPLATE_IMAGE: ${{ github.event.client_payload.image }}

# TODO check that only the right repo can trigger build

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT_TOKEN }}

      - name: Create template Dockerfile
        run: cat templates/Dockerfile.template | sed -e "s|%IMAGE%|${{ env.TEMPLATE_IMAGE }}|" > Dockerfile.theia

      - name: Build and Push template image
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: Dockerfile.theia
          repository: paritytech/substrate-playground-template-${{ env.TEMPLATE_ID }}-theia
          tags: latest
          add_git_labels: true
          tag_with_ref: true
          tag_with_sha: true

      - run: |-
          echo ::set-output name=sha::${GITHUB_SHA::7}
          echo ::set-output name=image::paritytech/substrate-playground-template-${TEMPLATE_ID}-theia:sha-${GITHUB_SHA::7}
        id: env

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install yq
        run: |
          python -m pip install --upgrade pip
          pip install yq

      - name: Update template version
        run: |-
          t=$(mktemp)
          cat conf/k8s/overlays/staging/templates/${TEMPLATE_ID} | yq -y ".image = \"${{ steps.env.outputs.image }}\"" | yq -y ".base = \"${TEMPLATE_IMAGE}\"" > ${t} && mv ${t} conf/k8s/overlays/staging/templates/${TEMPLATE_ID}

      - name: Commit template version update
        uses: EndBug/add-and-commit@v4
        with:
          message: ":bookmark: yee shall thurst into a new version of ${{ env.TEMPLATE_ID }}"
          add: conf/k8s/overlays/staging/templates/${{ env.TEMPLATE_ID }}
          tag: templates-${{ steps.env.outputs.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Create Release for ${{ env.TEMPLATE_ID }}
        uses: actions/create-release@v1
        with:
          tag_name: template-${{ env.TEMPLATE_ID }}-${{ steps.env.outputs.sha }}
          release_name: Release ${{ env.TEMPLATE_ID }}-${{ steps.env.outputs.sha }}
          body: |
            Released template for ${{ env.TEMPLATE_ID }} ${{ steps.env.outputs.image }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}