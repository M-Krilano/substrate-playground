apiVersion: v1
kind: ResourceQuota
metadata:
  name: pod-quota
spec:
  hard:
    pods: "15"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default-service-account-${K8S_NAMESPACE}
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: default-role
subjects:
- kind: ServiceAccount
  name: default-service-account-${K8S_NAMESPACE}
  namespace: ${K8S_NAMESPACE}
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: playground
spec:
  selector:
    matchLabels:
      app: playground
  replicas: 1
  template:
    metadata:
      labels:
        app: playground
    spec:
      serviceAccountName: default-service-account-${K8S_NAMESPACE}
      containers:
      - name: playground
        image: ${IMAGE}
        ports:
        - containerPort: ${PLAYGROUND_PORT}
---
apiVersion: v1
kind: Service
metadata:
  name: playground-http
  labels:
    app: playground
spec:
  type: NodePort
  ports:
  - port: ${PLAYGROUND_PORT}
    targetPort: ${PLAYGROUND_PORT}
  selector:
    app: playground
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress-lb
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
spec:
  externalTrafficPolicy: Local
  type: LoadBalancer
  loadBalancerIP: ${PLAYGROUND_STATIC_IP}
  ports:
  - port: 80
    name: http
    targetPort: 80
  - port: 443
    name: https
    targetPort: 443
  selector:
    # Selects nginx-ingress-controller pods
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: playground-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, OPTIONS"
    #nginx.ingress.kubernetes.io/cors-allow-origin: "https://${HOST}"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($scheme = https) {
        more_clear_headers "Strict-Transport-Security";
      }
spec:
  tls:
  - hosts:
    - '*.${HOST}'
    secretName: playground-tls
  rules:
  - host: ${HOST}
    http:
      paths:
      - path: /
        backend:
          serviceName: playground-http
          servicePort: ${PLAYGROUND_PORT}
