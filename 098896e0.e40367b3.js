(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{60:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(7),c=(n(0),n(83)),l={id:"deployment",title:"Deployment"},o={unversionedId:"operating/deployment",id:"operating/deployment",isDocsHomePage:!1,title:"Deployment",description:"Kubernetes is used as a deployment platform for the playground. Make sure that k8s > 1.14 is used.",source:"@site/docs/operating/deployment.md",slug:"/operating/deployment",permalink:"/substrate-playground/docs/operating/deployment",editUrl:"https://github.com/paritytech/substrate-playground/edit/master/website/docs/operating/deployment.md",version:"current",sidebar:"someSidebar",previous:{title:"CI/CD",permalink:"/substrate-playground/docs/building/cicd"}},i=[{value:"Prerequisites",id:"prerequisites",children:[{value:"Tools",id:"tools",children:[]},{value:"Cluster creation",id:"cluster-creation",children:[]},{value:"Custom overlay",id:"custom-overlay",children:[]},{value:"Github OAuth app",id:"github-oauth-app",children:[]},{value:"Fixed IP",id:"fixed-ip",children:[]},{value:"DNS",id:"dns",children:[]},{value:"TLS certificate",id:"tls-certificate",children:[]},{value:"Configuration",id:"configuration",children:[]},{value:"Deployment",id:"deployment",children:[]},{value:"Sanity checks",id:"sanity-checks",children:[]}]}],s={rightToc:i};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Kubernetes is used as a deployment platform for the playground. Make sure that k8s > 1.14 is used.\nGKE is used as primary deploy platform. It might not work as is on others."),Object(c.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(c.b)("h3",{id:"tools"},"Tools"),Object(c.b)("h4",{id:"gcloud"},"Gcloud"),Object(c.b)("p",null,"Install ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://cloud.google.com/sdk/docs/"}),"gcloud")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"#On OSX\nbrew cask install google-cloud-sdk\ngcloud init\n")),Object(c.b)("h4",{id:"jq"},"jq"),Object(c.b)("p",null,"See ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://stedolan.github.io/jq/"}),"https://stedolan.github.io/jq/")),Object(c.b)("h4",{id:"docker"},"Docker"),Object(c.b)("p",null,"See ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://docs.docker.com/get-docker/"}),"https://docs.docker.com/get-docker/")),Object(c.b)("h4",{id:"kubectl"},"kubectl"),Object(c.b)("p",null,"See ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://kubernetes.io/docs/tasks/tools/install-kubectl/"}),"https://kubernetes.io/docs/tasks/tools/install-kubectl/")),Object(c.b)("h4",{id:"kustomize"},"kustomize"),Object(c.b)("p",null,"See ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/kubernetes-sigs/kustomize"}),"https://github.com/kubernetes-sigs/kustomize")),Object(c.b)("h3",{id:"cluster-creation"},"Cluster creation"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"gcloud container clusters create substrate-playground \\\n    --release-channel regular \\\n    --zone us-central1-a \\\n    --node-locations us-central1-a \\\n    --machine-type n2d-standard-32 \\\n    --preemptible \\\n    --enable-autoscaling \\\n    --num-nodes 2 \\\n    --min-nodes 2 \\\n    --max-nodes 10\n")),Object(c.b)("p",null,"Find more details about machines:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"https://cloud.google.com/compute/docs/machine-types"}),"https://cloud.google.com/compute/docs/machine-types")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"https://cloud.google.com/compute/vm-instance-pricing"}),"https://cloud.google.com/compute/vm-instance-pricing"))),Object(c.b)("p",null,"Then go ahead and create the ",Object(c.b)("inlineCode",{parentName:"p"},"playground")," namespace:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"kubectl create ns playground\n")),Object(c.b)("h3",{id:"custom-overlay"},"Custom overlay"),Object(c.b)("p",null,"If a new deployment environment is created, duplicate ",Object(c.b)("inlineCode",{parentName:"p"},"conf/k8s/overlays/staging")," into a dedicated folder and adapt accordingly."),Object(c.b)("h3",{id:"github-oauth-app"},"Github OAuth app"),Object(c.b)("p",null,"Make sure a Github OAuth App is ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://docs.github.com/en/developers/apps/creating-an-oauth-app"}),"created")," with following parameters:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"Homepage URL"),": $BASE (e.g. ",Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"https://playground.substrate.dev"}),"https://playground.substrate.dev"),")"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"Authorization callback URL"),": ",Object(c.b)("inlineCode",{parentName:"li"},"$BASE/api/auth/github"),".")),Object(c.b)("p",null,"During the ",Object(c.b)("inlineCode",{parentName:"p"},"Configuration")," step both ",Object(c.b)("inlineCode",{parentName:"p"},"Client ID")," and ",Object(c.b)("inlineCode",{parentName:"p"},"Client secret")," will be required."),Object(c.b)("h3",{id:"fixed-ip"},"Fixed IP"),Object(c.b)("p",null,"Make sure to use regional addresses, matching your cluster region. Global addresses won't work."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{}),'gcloud compute addresses create playground --region us-central1\ngcloud compute addresses list --filter="region:( us-central1 )"\ngcloud compute addresses describe playground --region=us-central1 --format="value(address)"\n')),Object(c.b)("h3",{id:"dns"},"DNS"),Object(c.b)("p",null,"Create a new ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://console.cloud.google.com/net-services/dns/zones/new/create?authuser=1&project=substrateplayground-252112"}),"CloudDNS zone"),"."),Object(c.b)("p",null,"Add two ",Object(c.b)("inlineCode",{parentName:"p"},"A")," record set (one with `",Object(c.b)("inlineCode",{parentName:"p"},", one with "),"*` as DNS name) pointing to the newly created fixed IP."),Object(c.b)("p",null,"Another record set will be added during the TLS certificate generation."),Object(c.b)("h3",{id:"tls-certificate"},"TLS certificate"),Object(c.b)("p",null,"To get a wildcard certificate from let's encrypt:"),Object(c.b)("p",null,Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://certbot.eff.org/docs/using.html#manual"}),"https://certbot.eff.org/docs/using.html#manual")),Object(c.b)("p",null,"First make sure that certbot is installed: ",Object(c.b)("inlineCode",{parentName:"p"},"brew install certbot")),Object(c.b)("p",null,"Then request new challenges. Two DNS entries will have to be updated."),Object(c.b)("h4",{id:"staging"},"Staging"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{}),"sudo certbot certonly --manual --preferred-challenges dns --server https://acme-v02.api.letsencrypt.org/directory --manual-public-ip-logging-ok --agree-tos -m admin@parity.io -d *.playground-staging.substrate.dev -d playground-staging.substrate.dev\n\n# Update CloudDNS by adding a new TXT record as detailed by certbot\n\n# Make sure to check it's been propagated \ndig +short TXT _acme-challenge.playground-staging.substrate.dev @8.8.8.8\n")),Object(c.b)("p",null,"Then update the tls secret:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{}),"gcloud container clusters get-credentials substrate-playground-staging --region us-central1-a\nENVIRONMENT=staging make k8s-setup\nsudo kubectl create secret tls playground-tls --save-config --key /etc/letsencrypt/live/playground-staging.substrate.dev/privkey.pem --cert /etc/letsencrypt/live/playground-staging.substrate.dev/fullchain.pem --namespace=playground --dry-run=true -o yaml | sudo kubectl apply -f -\n")),Object(c.b)("p",null,"The new secret will be automatically picked up."),Object(c.b)("h4",{id:"production"},"Production"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{}),"sudo certbot certonly --manual --preferred-challenges dns --server https://acme-v02.api.letsencrypt.org/directory --manual-public-ip-logging-ok --agree-tos -m admin@parity.io -d *.playground.substrate.dev -d playground.substrate.dev\n\n# Update CloudDNS by adding a new TXT record as detailed by certbot\n\n# Make sure to check it's been propagated \ndig +short TXT _acme-challenge.playground.substrate.dev @8.8.8.8\n")),Object(c.b)("p",null,"Then update the tls secret:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{}),"gcloud container clusters get-credentials substrate-playground --region us-central1-a\nENVIRONMENT=production make k8s-setup\nsudo kubectl create secret tls playground-tls --save-config --key /etc/letsencrypt/live/playground.substrate.dev/privkey.pem --cert /etc/letsencrypt/live/playground.substrate.dev/fullchain.pem --namespace=playground --dry-run=true -o yaml | sudo kubectl apply -f -\n")),Object(c.b)("p",null,"The new secret will be auomatically picked up."),Object(c.b)("p",null,"Certificates can be checked using openssl:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"openssl s_client -connect playground.substrate.dev:443 -servername playground.substrate.dev -showcerts\n# Or for client with no SNI support\nopenssl s_client -connect  playground.substrate.dev:443 -showcerts\n")),Object(c.b)("h1",{id:"nginx-twist--todo-check"},"Nginx twist ? TODO check"),Object(c.b)("p",null,"kubectl create clusterrolebinding cluster-admin-binding \\\n--clusterrole cluster-admin \\\n--user $(gcloud config get-value account)"),Object(c.b)("p",null,"From ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://kubernetes.github.io/ingress-nginx/deploy/#gce-gke"}),"https://kubernetes.github.io/ingress-nginx/deploy/#gce-gke")),Object(c.b)("h3",{id:"configuration"},"Configuration"),Object(c.b)("p",null,"Set required ConfigMap and Secret as defined in the newly created OAuth app:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),'# WARNING Make sure all needed info are set before running those commands\nkubectl create configmap playground-config --namespace=playground --from-literal=admins="???,???" --from-literal=github.clientId="???"\nkubectl create secret generic playground-secrets --namespace=playground --from-literal=github.clientSecret="???" --from-literal=rocket.secretKey=`openssl rand -base64 32`\nENVIRONMENT=production make k8s-update-templates-config\n')),Object(c.b)("h3",{id:"deployment"},"Deployment"),Object(c.b)("p",null,"Finally, deploy the playground infrastructure:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{}),"ENVIRONMENT=production make k8s-deploy-playground\n")),Object(c.b)("h3",{id:"sanity-checks"},"Sanity checks"),Object(c.b)("p",null,"After deployment, the external facing IP can be found using:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{}),"kubectl get services ingress-nginx\n")))}u.isMDXComponent=!0},83:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return g}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),u=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,g=p["".concat(l,".").concat(d)]||p[d]||b[d]||c;return n?a.a.createElement(g,o(o({ref:t},s),{},{components:n})):a.a.createElement(g,o({ref:t},s))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,l=new Array(c);l[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<c;s++)l[s]=n[s];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);